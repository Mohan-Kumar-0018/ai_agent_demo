Agent:
Generate Python code that uses the Agno AI agent framework.
Use OpenAIChat provided by openai model
Then, use the agent to print the response for the prompt "Share a 2 sentence comedy story".

Use the following versions for agno and openai
agno==1.5.6 and openai==1.83.0
add packages to requirements.txt


Postgres Agent:

Generate Python code using the Agno AI agent framework.

1. Use the PostgresTools tool with the following credentials:
    user: postgres
    password: postgres
    host: localhost
    port: 5432
    db_name: stock_demo

2. Create an agent named "StockDemoAI" using the gpt-4o model from OpenAI with the description: "An AI agent that can query stock data and perform database operations."

3. Add the Postgres tool to the agentâ€™s tool list and enable show_tool_calls.

4. Finally, run the agent with this natural language query:
    "What are top 2 warehouses with highest orders count? Give me the warehouse name and the count of orders."

5. Print the agent's response to the terminal.


Github Agent:

Generate Python code using the Agno AI agent framework.

1. Create an agent name "GithubAgent" using the gpt-4o model from OpenAI with the description: 
role: Perform various GitHub operations like fetching pull requests, stars, issues, etc.
instructions: Help with GitHub operations including fetching repository information, pull requests, issues, etc.
2. Use GithubTools provided by agno.tools.github and add the following tools from GithubTools
    get_repository_stars
    get_pull_request_count
    get_pull_requests
    get_pull_request_changes
    get_pull_request_with_details
    get_pull_request_comments
3. Add load_dotenv to load env variable for GITHUB_ACCESS_TOKEN
4. Agent should run the following query:
    "How many open pull requests are there in the repo: shopuptech/warehouse_mgmt_service"
5. Print the agent's response to the terminal.